name: R-CMD-check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: true
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - name: Clear R package cache (Unix)
        if: runner.os != 'Windows'
        run: rm -rf ~/.cache/R/pak

      - name: Clear R package cache (Windows)
        if: runner.os == 'Windows'
        run: Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$env:LOCALAPPDATA\R\cache\R\pak"
        shell: pwsh

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          extra-repositories: 'https://cloud.r-project.org'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::rmarkdown
            any::knitr
            any::rextendr
          needs: check

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev

      - uses: r-lib/actions/check-r-package@v2
        with:
          build_args: 'c("--no-manual","--no-build-vignettes")'
          args: 'c("--no-manual", "--no-vignettes")'
          error-on: '"error"'