# Generated by roxygen2: do not edit by hand

export(.summarise_scores)
export(apply_contrastive_pca)
export(bulk_coexp)
export(c_pca_plot_alphas)
export(calculate_diffusion_auc)
export(calculate_effect_size)
export(community_detection)
export(contrastive_pca_processing)
export(cor_module_check_epsilon)
export(cor_module_check_res)
export(cor_module_final_modules)
export(cor_module_processing)
export(diffcor_module_processing)
export(diffuse_seed_nodes)
export(fast_ica_rust)
export(find_rbh_communities)
export(gene_ontology_data)
export(generate_rbh_graph)
export(get_cor_graph)
export(get_diffcor_graph)
export(get_go_human_data)
export(get_outputs)
export(get_params)
export(get_resolution_res)
export(get_results)
export(gse_go_elim_method)
export(gse_go_elim_method_list)
export(gse_hypergeometric)
export(gse_hypergeometric_list)
export(ica_evaluate_comp)
export(ica_processing)
export(ica_stabilised_results)
export(network_diffusions)
export(ot_harmonic_score)
export(params_cor_graph)
export(params_graph_resolution)
export(params_ica_general)
export(params_ica_ncomp)
export(params_ica_randomisation)
export(plot_epsilon_res)
export(plot_ica_stability_individual)
export(plot_ica_stability_summarised)
export(plot_resolution_res)
export(plot_synthetic_GEX_HT)
export(preprocess_bulk_coexp)
export(rbh_graph)
export(robust_scale)
export(rs_contrastive_pca)
export(rs_cor)
export(rs_cor_upper_triangle)
export(rs_covariance)
export(rs_create_random_aucs)
export(rs_differential_cor)
export(rs_fast_auc)
export(rs_fast_ica)
export(rs_fdr_adjustment)
export(rs_gse_geom_elim)
export(rs_gse_geom_elim_list)
export(rs_hedges_g)
export(rs_hypergeom_test)
export(rs_hypergeom_test_list)
export(rs_ica_iters)
export(rs_ica_iters_cv)
export(rs_ot_harmonic_sum)
export(rs_prepare_whitening)
export(rs_random_svd)
export(rs_range_norm)
export(rs_rbf_function)
export(rs_rbf_iterate_epsilons)
export(rs_rbh_sets)
export(rs_upper_triangle_to_dense)
export(synthetic_cPCA_data)
export(synthetic_signal_matrix)
export(tied_diffusion)
import(data.table)
import(ggplot2)
importFrom(magrittr,`%$%`)
importFrom(magrittr,`%>%`)
importFrom(zeallot,`%->%`)
importFrom(zeallot,`%<-%`)
useDynLib(bixverse, .registration = TRUE)
