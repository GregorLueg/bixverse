% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods_sc_batch_corr.R
\name{bbknn_sc}
\alias{bbknn_sc}
\title{Run BBKNN}
\usage{
bbknn_sc(
  object,
  batch_column,
  no_neighbours_to_keep = 15L,
  embd_to_use = "pca",
  no_embd_to_use = NULL,
  sc_bbknn_params = params_sc_bbknn(),
  seed = 42L,
  .verbose = TRUE
)
}
\arguments{
\item{object}{\code{single_cell_exp} class.}

\item{batch_column}{String. The column with the batch information in the
obs data of the class.}

\item{no_neighbours_to_keep}{Integer. Maximum number of neighbours to keep
from the BBKNN algorithm. Due to generating neighbours for each batch, there
might be a large number of generated neighbours. This will only keep the top
\code{no_neighbours_to_keep} neighbours.}

\item{embd_to_use}{String. The embedding to use. Atm, the only option is
\code{"pca"}.}

\item{no_embd_to_use}{Optional integer. Number of embedding dimensions to
use. If \code{NULL} all will be used.}

\item{sc_bbknn_params}{A list, please see \code{\link[=params_sc_bbknn]{params_sc_bbknn()}}. The
list has the following parameters:
\itemize{
\item neighbours_within_batch - Integer. Number of neighbours to consider
per batch.
\item knn_method - String. One of \code{c("annoy", "hnsw")}. Defaults to
\code{"annoy"}.
\item ann_dist - String. One of \code{c("cosine", "euclidean")}. The distance
metric to be used for the approximate neighbour search. Defaults to
\code{"cosine"}.
\item set_op_mix_ratio - Numeric. Mixing ratio between union (1.0) and
intersection (0.0).
\item local_connectivity - Numeric. UMAP connectivity computation
parameter, how many nearest neighbours of each cell are assumed to be fully
connected.
\item annoy_n_trees - Integer. Number of trees to use in the generation of
the Annoy index.
\item search_budget - Integer. Search budget per tree for the \code{annoy}
algorithm.
\item trim - Optional integer. Trim the neighbours of each cell to these
many top connectivities. May help with population independence and improve
the tidiness of clustering. If \code{NULL}, it defaults to
\code{10 * neighbours_within_batch}.
}}

\item{seed}{Integer. Random seed.}

\item{.verbose}{Boolean. Controls the verbosity of the function.}
}
\value{
The object with added kNN matrix based on BBKNN and the graph based
on the returned connectivities of the algorithm.
}
\description{
This function implements the batch-balanced k-nearest neighbour algorithm
from Polański, et al. Briefly, the algorithm generate a KNN index on a per
batch basis and identifies the neighbours of cells for each individual index.
Subsequently, it leverages UMAP connectivity calculations to reduce spurious
connections. For more details, please refer to Polański, et al.
}
\references{
Polański, et al., Bioinformatics, 2020
}
