% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods_coexp_cpca.R
\name{c_pca_plot_alphas}
\alias{c_pca_plot_alphas}
\title{Plot various alphas for the contrastive PCA}
\usage{
c_pca_plot_alphas(
  object,
  label_column = NULL,
  min_alpha = 0.1,
  max_alpha = 100,
  n_alphas = 10L,
  .verbose = TRUE
)
}
\arguments{
\item{object}{The underlying class, see \code{\link[=bulk_coexp]{bulk_coexp()}}. You need
to apply \code{\link[=contrastive_pca_processing]{contrastive_pca_processing()}} to the function for this
method to work. Checkmate will raise errors otherwise.}

\item{label_column}{An optional sample label column. Needs to exist in the
meta_data of the \code{bulk_coexp} class.}

\item{min_alpha}{Minimum alpha to test.}

\item{max_alpha}{Maximum alpha to test.}

\item{n_alphas}{Number of alphas to test. The function will generate a series
of alphas from log(min_alpha) to log(max_alpha) to test out.}

\item{.verbose}{Controls verbosity of function.}
}
\value{
A ggplot showing the impact of various alpha parameters on the
samples in form of 2D plots.
}
\description{
This function will plot various alphas to highlight the most interesting
alpha parameters akin to the implementation of contrastive PCA in Python.
}
\references{
Abid, et al., Nature Communications, 2018
}
