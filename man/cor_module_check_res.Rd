% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coexp_methods_cor.R
\name{cor_module_check_res}
\alias{cor_module_check_res}
\title{Iterate through Leiden resolutions for graph-based community detection.}
\usage{
cor_module_check_res(
  object,
  resolution_params = graph_resolution_params(),
  graph_params = cor_graph_params(),
  random_seed = 123L,
  min_genes = 10L,
  parallel = TRUE,
  max_workers = as.integer(parallel::detectCores()/2),
  .verbose = TRUE
)
}
\arguments{
\item{object}{The class, see \code{\link[=bulk_coexp]{bulk_coexp()}}.}

\item{resolution_params}{List. Parameters for the resolution search, see
\code{\link[=graph_resolution_params]{graph_resolution_params()}}. Contains:
\itemize{
\item min_res - Float. Minimum resolution to test.
\item max_res - Float. Maximum resolution to test.
\item number_res - Integer. Number of resolutions to test between the
\code{max_res} and \code{min_res.}
}}

\item{graph_params}{List. Parameters for the generation of the (differential)
correlation graph, see \code{\link[=cor_graph_params]{cor_graph_params()}}. Contains:
\itemize{
\item kernel_bandwidth - Float. Defines the bandwidth of the Gaussian
kernel to generate the affinities. Relevant for single correlation-based
graphs.
\item min_affinity - Float. Minimum affinity before the edge gets dropped.
Relevant for single correlation-based graphs.
\item min_cor - Float. Minimum absolute correlation that needs to be
observed in either data set. Only relevant for differential correlation-based
graphs.
\item fdr_threshold - Float. Maximum FDR for the differential correlation
p-value.
}}

\item{random_seed}{Integer. Random seed.}

\item{min_genes}{Integer. Minimum number of genes that should be in a
community.}

\item{parallel}{Boolean. Parallelise the Leiden clustering.}

\item{max_workers}{Integer. Maximum number of workers to use if parallel is
set to \code{TRUE}.}

\item{.verbose}{Controls the verbosity of the function.}
}
\value{
The class with added data to the properties.
}
\description{
This function will identify gene modules based on affinity graphs from the
single correlation or differential correlation methods. Briefly, in the case
of single correlation, the graph is generated based on the absolute
correlation coefficients that are subjected to a Gaussian affinity kernel.
This reduces spurious correlations and leaves a sparsely connected graph.
In the case of differential correlations, the graph is generated based on
significant differential correlations if one of the two correlations reached
the defined minimum thresholds.\cr
Subsequently, Leiden community detection is applied on the respective graph
through a range of resolutions that the user can define. The function then
returns meta information about the resolutions (which can also be plotted) to
identify the best suitable resolution parameter to identify co-expression modules.
}
