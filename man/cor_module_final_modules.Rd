% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cor_methods.R
\name{cor_module_final_modules}
\alias{cor_module_final_modules}
\title{Identify correlation-based gene modules via graphs.}
\usage{
cor_module_final_modules(
  bulk_coexp,
  resolution = NULL,
  min_size = 10L,
  max_size = 500L,
  subclustering = TRUE,
  random_seed = 123L,
  .kernel_bandwidth = 0.2,
  .min_affinity = 0.001,
  .max_iters = 100L,
  .verbose = TRUE
)
}
\arguments{
\item{resolution}{The Leiden resolution parameter you wish to use. If NULL,
it will use the optimal one identified by \code{\link[=cor_module_check_res]{cor_module_check_res()}}.
If nothing can be found, will default to 1.}

\item{min_size}{Integer. Minimum size of the communities.}

\item{max_size}{Integer. Maximum size of the communities.}

\item{subclustering}{Boolean. Shall after a first clustering communities that
are too large be further sub clustered. Defaults to \code{TRUE}.}

\item{random_seed}{Integer. Random seed.}

\item{.kernel_bandwidth}{Numeric. A value between 0 and 1. !This parameter
only plays a role if you have not run \code{\link[=cor_module_check_res]{cor_module_check_res()}}!.}

\item{.min_affinity}{Numeric. A value between 0 and 1. !This parameter only
plays a role if you have not run \code{\link[=cor_module_check_res]{cor_module_check_res()}}!.}

\item{.max_iters}{Integer. If sub clustering is set to \code{TRUE}, what shall be the
maximum number of iterations. Defaults to 100L.}

\item{.verbose}{Boolean. Controls the verbosity of the function.}

\item{`bulk_coexp`}{The class, see \code{\link[=bulk_coexp]{bulk_coexp()}}.}
}
\value{
The class with added data to the properties.
}
\description{
To be written...
}
