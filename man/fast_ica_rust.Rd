% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coexp_methods_ica.R
\name{fast_ica_rust}
\alias{fast_ica_rust}
\title{Fast ICA via Rust}
\usage{
fast_ica_rust(
  X_norm,
  K,
  n_icas,
  ica_fun = c("logcosh", "exp"),
  seed = NULL,
  maxit = 200L,
  alpha = 1,
  tol = 1e-04,
  .verbose = FALSE
)
}
\arguments{
\item{X_norm}{The scaled data. Output of \code{\link[=rs_prepare_whitening]{rs_prepare_whitening()}}.}

\item{K}{The K matrix. Output of \code{\link[=rs_prepare_whitening]{rs_prepare_whitening()}}.}

\item{n_icas}{Number of ICAs}

\item{ica_fun}{String, element of \code{c("logcosh", "exp")}.}

\item{seed}{Seed to ensure reproducible results.}

\item{maxit}{Maximum iterations to run. Defaults to 200L.}

\item{alpha}{Alpha parameters for the \code{"logcosh"} implementation. Defaults to
1.}

\item{tol}{Tolerance at which the algorithm is considered converged. Defaults
to 1e-04.}

\item{.verbose}{Boolean controlling the verbosity.}
}
\value{
A list containing:
\itemize{
\item w The mixing matrix w.
\item A ICA results matrix A.
\item S ICA results matrix S.
\item converged Boolean indicating if algorithm converged.
}
}
\description{
This functions is a wrapper over the Rust implementation of fastICA. It has
the same two options \code{c("logcosh", "exp")} to run ICA in the parallel modus.
}
