% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods_single_cell.R
\name{generate_knn_single_cell}
\alias{generate_knn_single_cell}
\title{Generate kNN graph for single cell}
\usage{
generate_knn_single_cell(
  object,
  embd_to_use = "pca",
  no_embd_to_use = NULL,
  knn_params = params_sc_knn(),
  seed = 42L,
  .verbose = TRUE
)
}
\arguments{
\item{object}{\code{single_cell_exp} class.}

\item{embd_to_use}{String. The embedding to use. Atm, the only option is
\code{"pca"}.}

\item{no_embd_to_use}{Optional integer. Number of embedding dimensions to
use. If \code{NULL} all will be used.}

\item{knn_params}{List. Output of \code{\link[=params_sc_knn]{params_sc_knn()}}. A list with
the following items:
\itemize{
\item k - Integer. Number of neighbours to identify.
\item n_trees -  Integer. Number of trees to use for the \code{annoy} algorithm.
The higher, the longer the algorithm takes, but the more precise the
approximated nearest neighbours.
\item search_budget - Integer. Search budget per tree for the \code{annoy}
algorithm. The higher, the longer the algorithm takes, but the more precise
the approximated nearest neighbours.
\item knn_algorithm - String. One of \code{c("annoy", "hnsw")}.
}}

\item{seed}{Integer. For reproducibility.}

\item{.verbose}{Boolean. Controls verbosity and returns run times.}
}
\value{
The object with added KNN matrix.
}
\description{
This function will generate the kNN graph based on a given embedding (atm,
only option is PCA). Two different algorithms are implemented with different
speed and accuracy to approximate the nearest neighbours. \code{"annoy"} is more
rapid and based on the \verb{Approximate Nearest Neigbours Oh Yeah} algorithm,
whereas \code{"hnsw"} implements a \verb{Hierarchical Navigatable Small Worlds} vector
search that is slower, but more precise.
}
