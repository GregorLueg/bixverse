% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coexp_methods_ica.R
\name{ica_evaluate_comp}
\alias{ica_evaluate_comp}
\title{Iterate over different ncomp parameters for ICA}
\usage{
ica_evaluate_comp(
  object,
  ica_type = c("logcosh", "exp"),
  iter_params = list(cross_validate = FALSE, random_init = 50L, folds = 10L),
  ncomp_params = list(max_no_comp = 100L, steps = 5L, custom_seq = NULL),
  ica_params = list(maxit = 200L, alpha = 1, max_tol = 1e-04, verbose = FALSE),
  random_seed = 42L,
  .verbose = TRUE
)
}
\arguments{
\item{object}{The class, see \code{\link[=bulk_coexp]{bulk_coexp()}}. You need to apply
\code{\link[=ica_processing]{ica_processing()}} before running this function.}

\item{ica_type}{String, element of \code{c("logcosh", "exp")}.}

\item{iter_params}{List. This list controls the randomisation parameters
for estimating the stability of the components. Has the following elements:
\itemize{
\item cross_validate - Boolean. Shall the data be split into different
chunks on which ICA is run. This will slow down the function substantially,
as every chunk needs to whitened again.
\item random_init - Integer. How many random initialisations shall be used
for the ICA runs.
\item folds - If \code{cross_validate} is set to \code{TRUE} how many chunks shall be
used. To note, you will run per ncomp random_init * fold ICA runs which
can quickly increase.
}}

\item{ncomp_params}{List. Parameters for the ncomp to iterate through. In the
standard setting, \code{c(2, 3, 4, 5)} will be tested and then in steps until
max_no_comp will be tested, i.e., \code{c(2, 3, 4, 5, 10, 15, ..., max_no_comp - 5, max_no_comp)}.
\itemize{
\item max_no_comp - Maximum number of ncomp to test.
\item steps - Integer. In which steps to move from 5 onwards.
\item custom_seq - An integer vector. If you wish to provide a custom version
of no_comp to iterate through.
}}

\item{ica_params}{List. The ICA parameters, a list containing:
\itemize{
\item maxit - Integer. Maximum number of iterations for ICA.
\item alpha - Float. The alpha parameter for the logcosh version of ICA.
Should be between 1 to 2.
\item max_tol - Maximum tolerance of the algorithm.
\item verbose - Controls verbosity of the function.
}}

\item{random_seed}{Integer. For reproducibility.}

\item{.verbose}{Boolean. Controls verbosity.}
}
\value{
\code{bulk_coexp} with the added information of stability of the components
and other data to plot to choose the right \code{ncomp}.
}
\description{
...
}
