% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods_sc_processing.R
\name{load_h5_cellranger}
\alias{load_h5_cellranger}
\title{Load CellRanger h5 files into \code{single_cell_exp}}
\usage{
load_h5_cellranger(
  object,
  h5_path,
  sc_qc_param = params_sc_min_quality(),
  streaming = TRUE,
  batch_size = 1000L,
  .verbose = TRUE
)
}
\arguments{
\item{object}{\code{single_cell_exp} class.}

\item{h5_path}{File path to the CellRanger h5 file.}

\item{sc_qc_param}{List. Output of \code{\link[=params_sc_min_quality]{params_sc_min_quality()}}. A
list with the following elements:
\itemize{
\item min_unique_genes - Integer. Minimum number of genes to be detected
in the cell to be included.
\item min_lib_size - Integer. Minimum library size in the cell to be
included.
\item min_cells - Integer. Minimum number of cells a gene needs to be
detected to be included.
\item target_size - Float. Target size to normalise to. Defaults to \code{1e5}.
}}

\item{streaming}{Boolean. Shall the data be streamed during the conversion
of CSR to CSC. Defaults to \code{TRUE} and should be used for larger data sets.}

\item{batch_size}{Integer. If \code{streaming = TRUE}, how many cells to process
in one batch. Defaults to \code{1000L}.}

\item{.verbose}{Boolean. Controls the verbosity of the function.}
}
\value{
It will populate the files on disk and return the class with updated
shape information.
}
\description{
This function loads CellRanger h5 files (v2 or v3 formats) with automatic
format detection. It loads cell and gene identifiers into the DuckDB of the
\code{single_cell_exp} class and the counts into a Rust-binarised format for
rapid access. During the reading in of the counts, the log CPM transformation
will occur automatically.

Supported formats:
\itemize{
\item h5v3 - CellRanger v3+ format with /matrix prefix
\item h5v2 - CellRanger v2 format with root-level datasets
}
}
