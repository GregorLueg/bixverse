% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes_single_cell.R
\name{single_cell_duckdb_base}
\alias{single_cell_duckdb_base}
\title{Base class for the single cell DuckDB connection}
\description{
This is the base class for the single cell experiment DuckDB connection,
containing standard functions such as retrievel of tables, connection checks,
etc.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-single_cell_duckdb_base-new}{\code{single_cell_duckdb_base$new()}}
\item \href{#method-single_cell_duckdb_base-get_obs_table}{\code{single_cell_duckdb_base$get_obs_table()}}
\item \href{#method-single_cell_duckdb_base-get_vars_table}{\code{single_cell_duckdb_base$get_vars_table()}}
\item \href{#method-single_cell_duckdb_base-add_data_obs}{\code{single_cell_duckdb_base$add_data_obs()}}
\item \href{#method-single_cell_duckdb_base-add_data_var}{\code{single_cell_duckdb_base$add_data_var()}}
\item \href{#method-single_cell_duckdb_base-clone}{\code{single_cell_duckdb_base$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-single_cell_duckdb_base-new"></a>}}
\if{latex}{\out{\hypertarget{method-single_cell_duckdb_base-new}{}}}
\subsection{Method \code{new()}}{
Initialises the Singe Cell DuckDB connection
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{single_cell_duckdb_base$new(db_dir, db_name = "sc_duckdb.db")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{db_dir}}{String. Path to where to store the db.}

\item{\code{db_name}}{String. The name of the DB. Defaults to \code{"sc_duckdb.db"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the initialised class
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-single_cell_duckdb_base-get_obs_table"></a>}}
\if{latex}{\out{\hypertarget{method-single_cell_duckdb_base-get_obs_table}{}}}
\subsection{Method \code{get_obs_table()}}{
Returns the full observation table from the DuckDB
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{single_cell_duckdb_base$get_obs_table(indices = NULL, cols = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indices}}{Optional cell/obs indices.}

\item{\code{cols}}{Optional column names to return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The observation table (if found) as a data.table with optionally
selected indices and/or columns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-single_cell_duckdb_base-get_vars_table"></a>}}
\if{latex}{\out{\hypertarget{method-single_cell_duckdb_base-get_vars_table}{}}}
\subsection{Method \code{get_vars_table()}}{
Returns the full var table from the DuckDB.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{single_cell_duckdb_base$get_vars_table(indices = NULL, cols = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indices}}{Optional gene/var indices.}

\item{\code{cols}}{Optional column names to return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The var table (if found) as a data.table with optionally
selected indices and/or columns.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-single_cell_duckdb_base-add_data_obs"></a>}}
\if{latex}{\out{\hypertarget{method-single_cell_duckdb_base-add_data_obs}{}}}
\subsection{Method \code{add_data_obs()}}{
Add new data to the obs table in the DuckDB
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{single_cell_duckdb_base$add_data_obs(new_data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{A data.table with additional new columns. The order needs
to be the same as the original in the obs table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self while adding the new columns to the obs table
in the DuckDB.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-single_cell_duckdb_base-add_data_var"></a>}}
\if{latex}{\out{\hypertarget{method-single_cell_duckdb_base-add_data_var}{}}}
\subsection{Method \code{add_data_var()}}{
Add the information which genes pass threshold to the DuckDB.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{single_cell_duckdb_base$add_data_var(new_data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_data}}{A data.table with additional new columns. The order needs
to be the same as the original in the var table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisible self while adding the new columns to the var table
in the DuckDB.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-single_cell_duckdb_base-clone"></a>}}
\if{latex}{\out{\hypertarget{method-single_cell_duckdb_base-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{single_cell_duckdb_base$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
